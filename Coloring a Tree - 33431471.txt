#include <iostream>
#include <algorithm>
#include <vector>
#include <queue>
#include <unordered_set>
#include <map>
#include <utility>
#include <set>
#include <unordered_map>
#include <climits>
#include <cmath>
#include <stack>
#include <string>
using namespace std ;
#define ll long long int 
#define IOS ios::sync_with_stdio(false)  ; cin.tie(0) ; cout.tie()  
#define MOD  1000000007 

vector<int> adj[10005] ; 
int required[10005]  ;
int c =  0 ;
int ans   = 0 ;
void dfs(int cur ,int par ,  int parentcolor)
{
  if(parentcolor  != required[cur] )
  {
    ans++ ;
  }
   for(int i =  0 ; i <  adj[cur].size(); ++i)
   {
       if(adj[cur][i] == par)
        continue ; 
      dfs( adj[cur][i]  ,cur , required[cur] ) ; 
   }

}

int main(){
  IOS ; 
  ll n ;
  cin>>n  ;
  for(ll i = 2;  i <= n ; ++i)
  {
     int v ; 
     cin>>v ; 
     adj[i].push_back(v)  ;
     adj[v].push_back(i)   ;
  }
  for(int i  =  1 ;  i<= n  ;++i)
    cin>>required[i] ; 

  dfs(1,0,0) ;
  cout<<ans ; 
 
  
return   0 ;
} 