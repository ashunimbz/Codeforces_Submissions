#include <iostream>
#include <vector>
#include <cmath>
#include <set>
#include <map>
#include <queue>
#include <algorithm>
#include <unordered_map>
#include <unordered_set>
#include <climits>
#include <iomanip>
#define ll    long long int 
#define MOD 1000000007
#define inf  2000000000000000
#define eps  0.0000000000001
using namespace std ; 
ll arr[1000001] ; 
ll n ;
ll ans[1000001] ;  
vector< pair< ll , ll > >queries[1000001] ;   
ll fenwick[1000001] ; 
map<ll ,ll >last ;  



void update(ll  index , ll val)
{
   for(ll   i = index ; i <= n  ;   i +=  (i  & -i))
   {
      fenwick[i] = fenwick[i]  ^ val  ;  
   }
}

ll query(ll index)
{
   ll ans =  0;  
   for(ll   i = index ; i > 0  ;   i -=  (i  & -i))
   {
      ans  = ans ^ fenwick[i] ; 
   }
   return ans ;
}


int main()
{
   ios::sync_with_stdio(false);cin.tie(0) ;cout.tie(0) ;
   cin>>n ;  
   for(ll i  = 1 ;  i<= n ; ++i)
   cin>>arr[i] ;  
   ll m ;  
   cin>>m ;   
   ll q =  m  ; 
   ll p  = 0 ; 
   while(m--)
   {
     ll  l , r   ; 
     cin>>l>>r ;  
     queries[r].push_back({l,p}) ; 
      p++;
   }

   ll Xor[n+1] ;  
   Xor[0]  = 0 ; 
   for(ll i  = 1 ;  i<= n ; ++i)
    Xor[i] = Xor[i-1] ^ arr[i] ;  
   
  for(ll  i  =1 ;  i <= n  ;++i)
  {

    if(last[arr[i]] != 0)
    update(last[arr[i]],arr[i]);
    last[arr[i]]  =  i ;   
    update( i  , arr[i]) ; 
    for(auto fo : queries[i])
    {
       ll first = fo.first ;  
       ll sec =  fo.second ; 
       ll ans1 = Xor[i] ^ Xor[first-1] ;  
       ll ans2 = query(i) ^ query(first - 1) ; 
       ans[sec] =  ans1 ^ ans2  ; 
    } 

  }


  for(ll  i  = 0  ;  i < q ; ++i)
    cout<<ans[i]<<"\n" ; 

   return   0  ;
}