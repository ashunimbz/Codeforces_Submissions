#include <iostream>
#include <algorithm>
#include <vector>
#include <queue>
#include <unordered_set>
#include <map>
#include <utility>
#include <set>
#include <unordered_map>
#include <climits>
#include <cmath>
#include <stack>
#include <string>
using namespace std ;
#define ll long long int 
#define IOS ios::sync_with_stdio(false)  ; cin.tie(0) ; cout.tie()  
#define MOD  1000000007 
#define maxsize 100005  


char arr[52][52] ; 
ll n  , m ; 
string tada = "0123"  ;
vector<string>all ;
unordered_map< char  ,char >um  ;
 string dir ;
 int startx , starty   ;
 int endx , endy ;  
void gen(string  cur , string left)
{
  if( cur.length() == 4)
  {
  	 all.push_back(cur)  ;
  	 return  ; 
  } 
  for(int i = 0  ; i < left.length() ; ++i)
  {
      string yo  = left  ; 
      yo.erase(yo.begin() + i) ; 
      gen(cur + left[i] , yo) ; 
  }
}

bool isvalid(int curx , int cury  ,int curno)
{
   if(curx < 0 || cury < 0 || curx >= n || cury >= m )
   	return false ; 
     
   
   if(arr[curx][cury] == '#')
   	return false ; 
   if(curno == dir.length())

      {
            if(curx == endx && cury == endy)
    	return  true ; 
         return false   ;

      }

    if(curx == endx && cury == endy)
    	return  true ; 

    if( um[dir[curno] ] == 'u')
    	return isvalid(curx-1, cury,curno  + 1) ; 
   else if(um[dir[curno] ] == 'd')  
      return isvalid(curx+ 1, cury,curno  + 1) ; 
      else if (um[dir[curno] ] == 'l' )
       return isvalid(curx , cury-1 , curno + 1)  ;
       else
       return isvalid(curx , cury + 1  ,curno + 1)  ;       
 
	

}


int main()
{
    IOS ;
    gen("" ,"0123")  ;
   
     cin>>n>>m ; 

    for(int i = 0  ; i< n ; ++i)
    {
    	 for(int j  = 0 ;  j < m ; ++j)
    	 {
    	 	 cin>>arr[i][j] ;
    	 	 if(arr[i][j] == 'S')
    	 	 {
    	 	 	startx = i ; 
    	 	 	starty =  j  ;
    	 	 } 
    	 	 if(arr[i][j] == 'E')
    	 	 {
    	 	 	 endx = i ; 
    	 	 	 endy   = j  ;
    	 	 }
    	 }
    }
   
    cin>>dir ; 
   ll ans = 0  ;
    for(int i   =0 ;  i < 24 ; ++i)
    {
    	 string po =  all[i] ; 
    	 for(int j  =   0 ;  j < 4 ; ++j)
    	 {
    	 	 if(j == 0)
    	 	 	um[po[j]] = 'd' ; 
    	 	 else if(j == 1)
    	 	 	um[po[j]] = 'l' ; 
    	 	 else if(j == 2)
    	 	 	um[po[j]] = 'u' ; 
    	 	 else
    	 	 	um[po[j]] = 'r' ; 
    	 }
        
    	 if( isvalid(startx   ,starty ,  0)  )
    	 	ans++ ;
    	 
    	 um.clear()  ; 
    	

    }
    cout<<ans ;
    
return 0 ; 
}