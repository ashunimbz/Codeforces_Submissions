#include <iostream>
#include <algorithm>
#include <vector>
#include <queue>
#include <unordered_set>
#include <map>
#include <utility>
#include <set>
#include <unordered_map>
#include <climits>
#include <cmath>
#include <stack>
#include <string>
using namespace std ;
#define ll long long int 
#define IOS ios::sync_with_stdio(false)  ; cin.tie(0) ; cout.tie()  
#define MOD  1000000007  

vector<ll>adj[100001] ; 
ll gold[100001] ; 
ll visited[100001] ; 
ll mina = INT_MAX ; 
void dfs(int cur)
{
	mina = min(mina , gold[cur]) ; 
  visited[cur] = true ;
  for(int i =  0 ;  i< adj[cur].size();  ++i)
  {
  	  if(!visited[adj[cur][i]])
  	  	 dfs(adj[cur][i]) ; 
  }

}

int main()
{
   IOS ;
   ll n , m  ; 
   cin>>n>>m ; 
   fill(visited  ,visited + 100001  ,false);  
   for(ll i = 1 ;  i<= n  ;++i)
   {
   	 cin>>gold[i] ; 
   }
   for(ll i  = 0 ; i < m ; ++i)
   {
   	ll u ,v ; 
   	cin>>u>>v ; 
   	adj[u].push_back(v) ;
   	adj[v].push_back(u) ;  
   }
   ll ans=   0 ; 
   for(ll i  = 1 ; i <= n ; ++i)
   {
   	  if(!visited[i])
   	  {
   	  	  mina = INT_MAX ;
   	  	  dfs(i) ; 
   	  	  ans += mina ; 
   	  }
   }
  
  cout<<ans<<"\n" ; 
return 0  ;}