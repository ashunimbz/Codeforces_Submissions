#include <iostream>
#include <algorithm>
#include <cstdio>
#include <cstring>
#include <map>
#include <set>
#include <vector>
#include <unordered_map>
#include <unordered_set>
#include <numeric>
#include <string>
#include <set>
#include <cmath>
#define ll  long long int
using namespace std;
char arr[51][51] ;
bool visited[51][51] ;
bool ans = false;

void dfs(int n  ,int m ,int i , int j ,int previ ,int prevj  )
{

    if(i < 0 || j < 0  || i >= n || j >= m)
        return ;
    if(arr[i][j] != arr[previ][prevj])
        return ;

    if(visited[i][j])
       {
         //  cout<<i<<" "<<j<<"\n" ;
           ans = true ;
           return  ;
       }

     visited[i][j]  =true ;

    if(i + 1 != previ || j != prevj)
    dfs(n,m,i+1,j,i , j) ;
     if(i -1 != previ || j != prevj)
    dfs(n,m,i-1,j,i , j) ;
     if(i  != previ || j + 1 != prevj)
    dfs(n,m,i,j+1,i , j) ;
     if(i  != previ || j - 1!= prevj)
    dfs(n,m,i,j-1,i , j) ;



}


int main()
{
    ios::sync_with_stdio(false);cin.tie(0);
    int n ,m ;
    cin>>n>>m;


     for(int i =  0 ; i < n ; ++i)
        for(int j = 0 ;  j < m ; ++j)
        visited[i][j]  = false ;

    string sa[n] ;
    for(int i = 0  ;  i < n ; ++i)
        cin>>sa[i] ;

    for(int i = 0  ; i  < n ; ++i)
    {

        for(int j = 0 ;  j < m ; ++j)
        {
            arr[i][j] = sa[i][j] ;
        }

    }

    for(int i =  0 ; i < n  ;++i)
    {
        for(int j = 0 ;  j< m ; ++j)
        {


            if(!visited[i][j]){
            dfs(n,m,i+1,j,i,j);
            dfs(n,m,i-1,j,i,j);
            dfs(n,m,i,j+1,i,j);
            dfs(n,m,i,j-1,i,j);
            }
        }
    }

    if(ans)
        cout<<"Yes" ;
    else
        cout<<"No" ;

return 0 ;}
