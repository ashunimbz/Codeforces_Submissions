#include <iostream>
#include <vector>
#include <cmath>
#include <set>
#include <map>
#include <queue>
#include <algorithm>
#include <unordered_map>
#include <unordered_set>
#include <iomanip>
#define ll long long int 
#define mod 1000000007
#define inf  100000000000
using namespace std ;  
ll arr[500005] ; 
ll prefix[500005] ; 
ll sum   = 0 ; 
map<ll ,ll >mp ;  
 ll n  ;
 ll DP[500005][4] ; 
ll NoOfWays(ll cur , ll findthis)
{
     if(findthis == 4)
        return 0 ;
   if(cur == n-1)
   {
     if(findthis == 3 && prefix[cur] == mp[findthis])
        return 1 ;  
    return   0  ;   
   }
   if(DP[cur][findthis] != -1)
    return DP[cur][findthis] ;  
   if(prefix[cur] == mp[findthis])
   return DP[cur][findthis]  = NoOfWays(cur + 1   ,findthis + 1) + NoOfWays(cur + 1    ,findthis)  ; 
   return DP[cur][findthis]  =  NoOfWays(cur + 1  , findthis) ; 
}

int main()
{
  ios::sync_with_stdio(false) ;cin.tie(0) ;cout.tie(0);
  cin>>n  ;    
 for(ll i =  0 ; i < n ; ++i){
    cin>>arr[i] ;
    sum += arr[i] ;  
    }
  if(sum % 3 != 0 ) 
    {    cout<<0  ;
    return  0 ; }
    prefix[0]  = arr[0] ; 
    for(ll i  = 1 ;  i <   n ; ++i)
        prefix[i] = prefix[i-1] + arr[i]  ;
        for(int i  =  0 ; i < 500005 ; ++i)
        for(int j  = 0 ;  j < 4 ; ++j)
        DP[i][j]  = -1 ;   
    
    mp[1] = sum/3 ;  
    mp[2]  = (sum * 2)/3 ;  
    mp[3] =  sum ;  
  cout<<NoOfWays(0 ,  1) ;  
return  0 ;  }