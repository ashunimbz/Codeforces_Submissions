#include <iostream>
#include <vector>
#include <cmath>
#include <set>
#include <map>
#include <queue>
#include <algorithm>
#include <unordered_map>
#include <unordered_set>
#include <climits>
#include <iomanip>
#define ll    long long int 
#define MOD 1000000007
#define inf  2000000000000000
#define eps  0.0000000000001
using namespace std ; 
ll n  ; 

vector< pair<ll, ll> >  adj[100005] ; 

ll dp[100005] ; 
ll maxa  = 0  ; 

void dfs(int node , int parent)
{
  if(adj[node].size() == 1 && node != 1)
  {
     maxa  = max(maxa  ,dp[node]) ; 
  }
   
    for(int i =  0 ; i < (ll) adj[node].size() ; ++i)
    {
      if(adj[node][i].first == parent)
        continue ;  
      dp[adj[node][i].first]  = dp[node] + adj[node][i].second ;  
      dfs(adj[node][i].first , node) ; 
    }
}

 
int main()
{
   ios::sync_with_stdio(false);cin.tie(0) ;cout.tie(0) ; 
   cin>>n;  
   ll p  =   0 ; 
   for(ll i  = 0 ;  i< n-1  ;++i)
   {
     ll u  ,v , w ;cin>>u>>v>>w ;
     p += w + w ;    
     adj[u].push_back({v , w}) ;
     adj[v].push_back({u , w}) ;  
   }
   dp[1] = 0 ;  
   dfs(1 , 0) ; 
  cout<<p-maxa  ;
     
   return   0  ;

}
 